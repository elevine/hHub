<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.projecthdata</groupId>
    <artifactId>hHub</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>hHub</name>

    <modules>
        <module>hHub-commons</module>
        <module>hHub-android-client</module>
        <module>hHub-commons-tests</module>
    </modules>
    
    <properties>
        <spring-social-version>1.0.0.RELEASE</spring-social-version>
        <spring-android-version>1.0.0.M4</spring-android-version>
        <jackson-version>1.9.0</jackson-version>
        <maven-compiler-plugin-version>2.3.2</maven-compiler-plugin-version>
        <android-version>2.1_r1</android-version>
        <java-version>1.6</java-version>
    </properties>
    
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!-- For developing against latest Spring milestones -->
        <repository>
            <id>org.springframework.maven.milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>android-rome-feed-reader-repository</id>
            <name>Android ROME Feed Reader Repository</name>
            <url>https://android-rome-feed-reader.googlecode.com/svn/maven2/releases</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin-version}</version>
                    <configuration>
                        <source>${java-version}</source>
                        <target>${java-version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                    <artifactId>android-maven-plugin</artifactId>
                    <version>3.0.0-alpha-13</version>
                    <configuration>
                        <dex>
                            <jvmArguments>
                                <jvmArgument>-Xms256m</jvmArgument>
                                <jvmArgument>-Xmx512m</jvmArgument>
                            </jvmArguments>
                        </dex>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.4.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.0-beta-1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.3.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.3.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>2.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4.3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>1.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Build-Source-Version>${java-version}</Build-Source-Version>
                            <Build-Target-Version>${java-version}</Build-Target-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.android</groupId>
                <artifactId>android</artifactId>
                <version>
                    2.1.2
                </version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.android</groupId>
                <artifactId>spring-android-rest-template</artifactId>
                <version>${spring-android-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.android</groupId>
                <artifactId>spring-android-core</artifactId>
                <version>${spring-android-version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.social</groupId>
                <artifactId>spring-social-core</artifactId>
                <version>${spring-social-version}</version>
                <exclusions>
                    <!-- exclude in favor of spring-android-rest-template -->
                    <exclusion>
                        <artifactId>spring-web</artifactId>
                        <groupId>org.springframework</groupId>
                    </exclusion>
                    <!-- Provided by Android -->
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.android</groupId>
                <artifactId>spring-android-auth</artifactId>
                <version>${spring-android-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-crypto</artifactId>
                <version>3.1.0.RC2.crypto</version>
                <exclusions>
                    <!-- Exclude in favor of Spring Android Core -->
                    <exclusion>
                        <artifactId>spring-core</artifactId>
                        <groupId>org.springframework</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.social</groupId>
                <artifactId>spring-social-test</artifactId>
                <version>${spring-social-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-asl</artifactId>
                <version>${jackson-version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-core-asl</artifactId>
                <version>${jackson-version}</version>
            </dependency>

            <dependency>
                <groupId>org.simpleframework</groupId>
                <artifactId>simple-xml</artifactId>
                <version>2.6.2</version>
                <exclusions>
                    <exclusion>
                        <artifactId>stax</artifactId>
                        <groupId>stax</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>stax-api</artifactId>
                        <groupId>stax</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>xpp3</artifactId>
                        <groupId>xpp3</groupId>
                    </exclusion>
                </exclusions>
                <scope>compile</scope>
            </dependency>
            
            <dependency>
                <groupId>org.simpleframework</groupId>
                <artifactId>simple-xml</artifactId>
                <version>2.6.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.pivotallabs</groupId>
            <artifactId>robolectric</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.1.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>development</id>
            <!-- using this since activeByDefault does not work well with multiple profiles -->
            <activation>
                <property>
                    <name>environment</name>
                    <value>!production</value>
                </property>
            </activation>
            <properties>
                <deployment.stage>In Development</deployment.stage>
                <android.debuggable>true</android.debuggable>
            </properties>
        </profile>
        <profile>
            <id>production</id>
            <properties>
                <deployment.stage>In Production</deployment.stage>
                <android.debuggable>false</android.debuggable>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <!-- via this activation the profile is automatically used when the release is done with the maven release
            plugin -->
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- proguard can shrink the source classes and remove unused classes and more.. -->
                    <plugin>
                        <groupId>com.pyx4me</groupId>
                        <artifactId>proguard-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>proguard</goal>
                                </goals>
                            </execution>
                        </executions>
                        <!-- we need to override the dependency of the plugin to get a newer version of proguard -->
                        <dependencies>
                            <dependency>
                                <groupId>net.sf.proguard</groupId>
                                <artifactId>proguard</artifactId>
                                <version>4.4</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <proguardVersion>4.4</proguardVersion>
                            <maxMemory>256m</maxMemory>
                            <injar>android-classes</injar>
                            <libs>
                                <lib>${rt.jar.path}</lib>
                                <lib>${jsse.jar.path}</lib>
                            </libs>
                            <skip>false</skip>
                            <obfuscate>true</obfuscate>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <options>
                                <!-- which classes are we keeping around, android specific -->
                                <option>-keep public class * extends android.app.Activity</option>
                                <option>-keep public class * extends android.app.Application</option>
                                <option>-keep public class * extends android.app.Service</option>
                                <option>-keep public class * extends android.content.BroadcastReceiver</option>
                                <option>-keep public class * extends android.content.ContentProvider</option>
                                <option><![CDATA[-keep public class * extends android.view.View {
                                    public <init>(android.content.Context);
                                    public <init>(android.content.Context, android.util.AttributeSet);
                                    public <init>(android.content.Context, android.util.AttributeSet, int);
                                    public void set*(...);  }]]>
                                </option>
                                <option><![CDATA[-keepclasseswithmembers class * {
                                    public <init> (android.content.Context, android.util.AttributeSet); } ]]>
                                </option>
                                <option><![CDATA[-keepclasseswithmembers class * {
                                    public <init> (android.content.Context, android.util.AttributeSet, int); } ]]>
                                </option>
                                <option><![CDATA[-keepclassmembers class * implements android.os.Parcelable {
                                    static android.os.Parcelable$Creator *; } ]]>
                                </option>
                                <option><![CDATA[-keepclassmembers class **.R$* { public static <fields>; } ]]>
                                </option>
                                <option><![CDATA[-keepclasseswithmembernames class * { native <methods>; } ]]>
                                </option>
                                <option><![CDATA[-keepclassmembers class * extends java.lang.Enum {
                                    public static **[] values();
                                    public static ** valueOf(java.lang.String); } ]]>
                                </option>
                                <option><![CDATA[-keepclassmembers class * extends android.app.Activity{
                                    public void *(android.view.View); } ]]>
                                </option>

                                <!-- general proguard options -->
                                <option>-dontskipnonpubliclibraryclasses</option>
                                <!--<option>-dontusemixedcaseclassnames</option>-->
                                <!--<option>-dontskipnonpubliclibraryclassmembers</option>-->
                                <!--<option>-allowaccessmodification</option>-->

                                <!-- you really should NOT avoid warning but it can be helpful when testing options -->
                                <option>-ignorewarnings</option>
                                <option>-verbose</option>

                                <!-- next options are necessary to decipher stack traces with retrace later,
                                 relies on the map file created -->
                                <option>-renamesourcefileattribute SourceFile</option>
                                <option>-keepattributes SourceFile,LineNumberTable</option>

                                 <!---keepattributes-->
                        <!--SourceFile,LineNumberTable,*Annotation*-->

                                <!-- Optimization related settings -->
                                <!--<option>-dontoptimize</option>-->
                                <option>-optimizationpasses 3</option>
                                <!-- The -optimizations option disables some arithmetic simplifications that Dalvik 1.0
                                 and 1.5 can't handle. -->
                                <option>-optimizations !code/simplification/arithmetic</option>
                            </options>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jarsigner-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>signing</id>
                                <goals>
                                    <goal>sign</goal>
                                    <goal>verify</goal>
                                </goals>
                                <phase>package</phase>
                                <inherited>true</inherited>
                                <configuration>
                                    <removeExistingSignatures>true</removeExistingSignatures>
                                    <archiveDirectory/>
                                    <includes>
                                        <include>${project.build.directory}/${project.artifactId}.apk</include>
                                    </includes>
                                    <keystore>${sign.keystore}</keystore>
                                    <alias>${sign.alias}</alias>
                                    <storepass>${sign.storepass}</storepass>
                                    <keypass>${sign.keypass}</keypass>
                                    <verbose>true</verbose>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- the signed apk then needs to be zipaligned -->
                    <plugin>
                        <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                        <artifactId>maven-android-plugin</artifactId>
                        <inherited>true</inherited>
                        <configuration>
                            <sign>
                                <debug>false</debug>
                            </sign>
                            <zipalign>
                                <verbose>true</verbose>
                                <inputApk>${project.build.directory}/${project.artifactId}.apk</inputApk>
                                <outputApk>${project.build.directory}/${project.artifactId}-signed-aligned.apk
                                </outputApk>
                            </zipalign>
                        </configuration>
                        <executions>
                            <execution>
                                <id>alignApk</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>zipalign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.artifactId}-signed-aligned.apk</file>
                                    <type>apk</type>
                                    <classifier>signed-aligned</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/proguard_map.txt</file>
                                    <type>map</type>
                                    <classifier>release</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-signed-aligned</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- to avoid having to do symlinks to rt.jar like documented e.g. here
            http://bruehlicke.blogspot.com/2009/11/missing-rtjar-mac-os-x-using-proguard.html
            http://codebistro.com/2010/07/18/proguard-and-runtime-libraries-on-mac-os-x/
            -->
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <rt.jar.path>${env.JAVA_HOME}/jre/lib/rt.jar</rt.jar.path>
                <jsse.jar.path>${env.JAVA_HOME}/jre/lib/jsse.jar</jsse.jar.path>
            </properties>
        </profile>
        <!-- mac profile has to be after unix since running on mac will trigger both -->
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <!-- absolute path -->
                <!--<rt.jar.path>/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Classes/classes.jar</rt.jar.path>-->
                <!-- or with JAVA_HOME /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/ -->
                <rt.jar.path>${env.JAVA_HOME}/../Classes/classes.jar</rt.jar.path>
                <jsse.jar.path>${env.JAVA_HOME}/../Classes/jsse.jar</jsse.jar.path>
            </properties>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <rt.jar.path>${env.JAVA_HOME}/jre/lib/rt.jar</rt.jar.path>
                <jsse.jar.path>${env.JAVA_HOME}/jre/lib/jsse.jar</jsse.jar.path>
            </properties>
        </profile>

    </profiles>


</project>